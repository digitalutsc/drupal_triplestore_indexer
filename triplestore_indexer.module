<?php

/**
 * @file
 * Contains triplestore_indexer.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function triplestore_indexer_help($route_name, RouteMatchInterface $route_match)
{
  switch ($route_name) {
    // Main module help for the triplestore_indexer module.
    case 'help.page.triplestore_indexer':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module will listening to Content event and indexing it to RDF and send result to Triple store') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function triplestore_indexer_theme()
{
  return [
    'triplestore_indexer' => [
      'render element' => 'children',
    ],
  ];
}

/**
 * Implementing action hook_enitty_update
 *
 * @param $entity
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 */
function triplestore_indexer_entity_update($entity) {
  global $base_url;
  print_log(triplestore_indexer_entity_update);
  print_log($entity->id());
  print_log($base_url);
  print_log($entity->get('body')->getValue()[0]['value']);
  print_log($entity->bundle());

  $node = \Drupal::entityTypeManager()->getStorage('node')->load($entity->id());

  // get author
  $owner = $node->getOwner()->getDisplayName();
  print_log($owner);
}

/**
 * Implementing action hook_entity_insert
 *
 * @param $entity
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 */
function triplestore_indexer_entity_insert($entity) {

  $service = \Drupal::service('triplestore_indexer.indexing');

  $data = $service->serialization($entity);
  $service->post($data);

}


/**
 * Debug function: display any variable to error log
 *
 * @param $thing
 */
if (!function_exists('logging')) {
  function print_log($thing)
  {
    error_log(print_r($thing, true), 0);
  }

}
/**
 * Debug function: display any variable to current webpage
 * @param $thing
 */
if (!function_exists('logging')) {
  function logging($thing)
  {
    echo "<pre>";
    print_r($thing);
    echo "</pre>";
  }
}
